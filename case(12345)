// Define the base field: Cyclotomic field of order 20
FF<e> := CyclotomicField(20);

// Load helper functions and Grassmannian data
load "library.m";
load "Grassmannian subvarieties.txt";

// Define the symmetric group on 6 elements and a representative permutation
G := Sym(6);
g := G!(1,2,3,4,5);

// Find relevant subgroups of GL(6, FF) associated with g
lis := FindLis(g, FF);

// Initialize lists for subgroups and fixed loci
Grp := [];     // Full subgroups
PGrp := [];    // Projective versions (mod ±Id)
LFix := [];    // Fixed loci

// Loop over all candidate subgroups
for A in lis do
    lFix := [];

    // Compute fixed loci under action of each element in the subgroup
    for a in A do
        // Compute the 3rd wedge power action matrix on Plücker coordinates
        Wa := Matrix(CoordinateRing(P19), WedgePower(a, 3));

        // Matrix defining the fixed point condition
        N := Matrix(CoordinateRing(P19), [v, Eltseq(x * Wa)]);

        // Fixed point scheme in the Grassmannian
        Fix := Scheme(P19, Minors(N, 2)) meet Gr;

        // Intersect with the subvariety W
        Z := Fix meet W;

        lFix := Append(lFix, Z);
        ZFix := &meet lFix;

        // If intersection is empty, skip this subgroup
        if Dimension(ZFix) eq -1 then
            break;
        end if;
    end for;

    // If the fixed locus is non-empty, record the subgroup and data
    if Dimension(ZFix) ne -1 then
        LFix := Append(LFix, ZFix);
        PA := quo< A | -IdentityMatrix(FF, 6) >;
        Grp := Append(Grp, A);
        PGrp := Append(PGrp, PA);
    end if;
end for;

// Output: Dimensions of the fixed loci
[Dimension(Z) : Z in LFix];

// Output: Names of the corresponding projective groups
[GroupName(G) : G in PGrp];

// Compute fibers over selected fixed loci
ind := [1];
for i in ind do
    PrimeComponents(pr(Fiber(pl, LFix[i])));
end for;
