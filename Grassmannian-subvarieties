// Define projective spaces
P5<x0,x1,x2,x3,x4,x5> := ProjectiveSpace(FF, 5);
P<a0,a1,a2,a3,a4,a5,b0,b1,b2,b3,b4,b5,c0,c1,c2,c3,c4,c5> := P5 * P5 * P5;
R := CoordinateRing(P);
pr := map<P->P5 | [a0,a1,a2,a3,a4,a5]>;

// Matrix of coordinates
M := Matrix(R, [
    [a0,a1,a2,a3,a4,a5],
    [b0,b1,b2,b3,b4,b5],
    [c0,c1,c2,c3,c4,c5]
]);

// Generate the Plücker coordinates (3x3 minors)
B := Minors(M, 3);

// Define the Plücker embedding into ℙ¹⁹
P19<z012,z013,z014,z015,z023,z024,z025,z034,z035,z045,
    z123,z124,z125,z134,z135,z145,z234,z235,z245,z345> := ProjectiveSpace(FF, 19);

pl := map<P -> P19 | B>;
Gr := Image(pl); // Grassmannian image

// Quadrics defining the base locus (orthogonality relations)
G1 := a0^2 + a1^2 + a2^2 + a3^2 + a4^2 + a5^2;
G2 := 2*a0*b0 + 2*a1*b1 + 2*a2*b2 + 2*a3*b3 + 2*a4*b4 + 2*a5*b5;
G3 := 2*a0*c0 + 2*a1*c1 + 2*a2*c2 + 2*a3*c3 + 2*a4*c4 + 2*a5*c5;
G4 := b0^2 + b1^2 + b2^2 + b3^2 + b4^2 + b5^2;
G5 := 2*b0*c0 + 2*b1*c1 + 2*b2*c2 + 2*b3*c3 + 2*b4*c4 + 2*b5*c5;
G6 := c0^2 + c1^2 + c2^2 + c3^2 + c4^2 + c5^2;

// Scheme defined by these quadratic forms
WF := Scheme(P, [G1, G2, G3, G4, G5, G6]);

// Equations defining a subvariety of the Grassmannian
BW := [
    z145*z235 - z135*z245 + z125*z345,
    z123*z235 + z124*z245 + z134*z345,
    z045*z235 - z035*z245 + z025*z345,
    z023*z235 + z024*z245 + z034*z345,
    z234^2 + z235^2 + z245^2 + z345^2,
    z145*z234 - z134*z245 + z124*z345,
    z135*z234 - z134*z235 + z123*z345,
    z134*z234 + z135*z235 + z145*z245,
    z125*z234 - z124*z235 + z123*z245,
    z124*z234 + z125*z235 - z145*z345,
    z123*z234 - z125*z245 - z135*z345,
    z045*z234 - z034*z245 + z024*z345,
    z035*z234 - z034*z235 + z023*z345,
    z034*z234 + z035*z235 + z045*z245,
    z025*z234 - z024*z235 + z023*z245,
    z024*z234 + z025*z235 - z045*z345,
    z023*z234 - z025*z245 - z035*z345,
    z015*z145 + z025*z245 + z035*z345,
    z014*z145 + z024*z245 + z034*z345,
    z013*z145 - z025*z234 + z024*z235,
    z012*z145 + z035*z234 - z034*z235,
    z123*z135 + z124*z145 - z234*z345,
    -z045*z135 + z035*z145 + z012*z234,
    z045*z135 - z035*z145 + z015*z345,
    z023*z135 + z024*z145,
    z015*z135 + z025*z235 - z045*z345,
    z014*z135 + z024*z235,
    z013*z135 - z024*z245,
    z012*z135 - z045*z234 + z034*z245,
    z134^2 + z135^2 + z145^2 + z345^2,
    z125*z134 - z124*z135 + z123*z145,
    z124*z134 + z125*z135 + z245*z345,
    z123*z134 - z125*z145 + z235*z345,
    z045*z134 - z034*z145 + z014*z345,
    z045*z134 - z034*z145 + z012*z235,
    -z035*z134 + z034*z135 + z012*z245,
    z035*z134 - z034*z135 + z013*z345,
    z034*z134 + z035*z135 + z045*z145,
    z024*z134 + z025*z135,
    z023*z134 - z025*z145,
    z015*z134 + z025*z234,
    z014*z134 - z025*z235,
    z013*z134 + z025*z245,
    z012*z134 + z045*z235 - z035*z245,
    z125^2 + z135^2 + z145^2 + z235^2 + z245^2 + z345^2,
    z124*z125 + z134*z135 + z234*z235,
    z123*z125 - z134*z145 - z234*z245,
    z045*z125 - z025*z145 + z015*z245,
    z045*z125 - z025*z145 + z013*z234,
    -z035*z125 + z025*z135 + z014*z234,
    z035*z125 - z025*z135 + z015*z235,
    z025*z125 + z035*z135 + z045*z145,
    z024*z125 + z034*z135,
    z023*z125 - z034*z145,
    z015*z125 - z035*z235 - z045*z245,
    z014*z125 - z034*z235,
    z013*z125 + z034*z245,
    z012*z125 - z034*z345,
    z124^2 - z135^2 - z235^2 - z345^2,
    z123*z124 + z135*z145 + z235*z245,
    -z045*z124 + z024*z145 + z013*z235,
    z045*z124 - z024*z145 + z014*z245,
    z034*z124 + z035*z125,
    z025*z124 + z035*z134,
    z024*z124 - z035*z135,
    z023*z124 + z035*z145,
    z015*z124 - z035*z234,
    z014*z124 + z035*z235,
    z013*z124 - z035*z245,
    z012*z124 + z035*z345,
    z123^2 - z145^2 - z245^2 - z345^2,
    -z045*z123 + z035*z124 - z025*z134 + z015*z234,
    -z045*z123 + z035*z124 - z034*z125 + z012*z345,
    z045*z123 + z025*z134 - z024*z135 + z013*z245,
    z045*z123 + z034*z125 - z024*z135 + z014*z235,
    z045*z123 - z035*z124 + z034*z125 + z025*z134 - z024*z135 + z023*z145,
    z035*z123 + z045*z124,
    z034*z123 - z045*z125,
    z025*z123 - z045*z134,
    z024*z123 + z045*z135,
    z023*z123 - z045*z145,
    z015*z123 + z045*z234,
    z014*z123 - z045*z235,
    z013*z123 + z045*z245,
    z012*z123 - z045*z345,
    z045^2 + z145^2 + z245^2 + z345^2,
    z035*z045 + z135*z145 + z235*z245,
    z034*z045 + z134*z145 + z234*z245,
    z025*z045 + z125*z145 - z235*z345,
    z024*z045 + z124*z145 - z234*z345,
    z023*z045 - z125*z134 + z124*z135,
    z015*z045 - z125*z245 - z135*z345,
    z014*z045 - z124*z245 - z134*z345,
    z013*z045 + z125*z234 - z124*z235,
    z012*z045 - z135*z234 + z134*z235,
    z035^2 + z135^2 + z235^2 + z345^2,
    z034*z035 + z134*z135 + z234*z235,
    z025*z035 + z125*z135 + z245*z345,
    z024*z035 + z124*z135,
    z023*z035 - z124*z145,
    z015*z035 - z125*z235 + z145*z345,
    z014*z035 - z124*z235,
    z013*z035 + z124*z245,
    z012*z035 + z145*z234 - z134*z245,
    z034^2 - z135^2 - z145^2 - z235^2 - z245^2 - z345^2,
    z025*z034 + z125*z134,
    z024*z034 - z125*z135,
    z023*z034 + z125*z145,
    z015*z034 - z125*z234,
    z014*z034 + z125*z235,
    z013*z034 - z125*z245,
    z012*z034 - z145*z235 + z135*z245,
    z025^2 - z135^2 - z145^2 - z345^2,
    z024*z025 - z134*z135,
    z023*z025 + z134*z145,
    z015*z025 + z135*z235 + z145*z245,
    z014*z025 + z134*z235,
    z013*z025 - z134*z245,
    z012*z025 + z134*z345,
    z024^2 + z135^2,
    z023*z024 - z135*z145,
    z015*z024 + z135*z234,
    z014*z024 - z135*z235,
    z013*z024 + z135*z245,
    z012*z024 - z135*z345,
    z023^2 + z145^2,
    z015*z023 - z145*z234,
    z014*z023 + z145*z235,
    z013*z023 - z145*z245,
    z012*z023 + z145*z345,
    z015^2 - z235^2 - z245^2 - z345^2,
    z014*z015 - z234*z235,
    z013*z015 + z234*z245,
    z012*z015 - z234*z345,
    z014^2 + z235^2,
    z013*z014 - z235*z245,
    z012*z014 + z235*z345,
    z013^2 + z245^2,
    z012*z013 - z245*z345,
    z012^2 + z345^2
];

// Define the subvariety of planes contained in the Fermat quadric
W := Scheme(P19, BW);

// Define a vector of coordinate functions in ℙ¹⁹
v := [P19.i : i in [1..20]];
x := Vector(v);
