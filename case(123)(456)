// Define the base field: Cyclotomic field of order 12
FF<e> := CyclotomicField(12);

// Load utility library and Grassmannian subvariety data
load "library.m";
load "Grassmannian subvarieties.txt";

// Define the symmetric group on 6 elements and a representative permutation
G := Sym(6);
g := G!(1,2,3)(4,5,6);

// Find all subgroups of GL(6, FF) associated to g that satisfy certain conditions
lis := FindLis(g, FF);

// Initialize lists to store data
Grp := [];     // List of subgroups
PGrp := [];    // Corresponding projective groups
LFix := [];    // Fixed loci

// Loop over all candidate subgroups
for A in lis do
    lFix := [];

    // Check fixed points under each element of the subgroup A
    for a in A do
        // Compute the 3rd wedge power action on the Pl√ºcker coordinates
        Wa := Matrix(CoordinateRing(P19), WedgePower(a, 3));

        // Matrix for fixed point scheme computation
        N := Matrix(CoordinateRing(P19), [v, Eltseq(x * Wa)]);

        // Define the fixed point scheme in the Grassmannian
        Fix := Scheme(P19, Minors(N, 2)) meet Gr;

        // Intersect with the subvariety W
        Z := Fix meet W;

        lFix := Append(lFix, Z);
        ZFix := &meet lFix;

        // If intersection is empty, break early
        if Dimension(ZFix) eq -1 then
            break;
        end if;
    end for;

    // If the intersection is non-empty, store the subgroup and its data
    if Dimension(ZFix) ne -1 then
        LFix := Append(LFix, ZFix);
        PA := quo< A | -IdentityMatrix(FF, 6) >;
        Grp := Append(Grp, A);
        PGrp := Append(PGrp, PA);
    end if;
end for;

// Output: Dimensions of the fixed loci
[Dimension(Z) : Z in LFix];

// Output: Names of the corresponding projective groups
[GroupName(G) : G in PGrp];

// Compute fibers over selected indices
ind := [1, 2];
for i in ind do
    PrimeComponents(pr(Fiber(pl, LFix[i])));
end for;
